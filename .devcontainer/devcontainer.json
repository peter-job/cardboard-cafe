{
	"name": "Docker from Docker",
	"dockerFile": "Dockerfile",
	"runArgs": ["--init"],
	"mounts": [ 
		"source=/var/run/docker.sock,target=/var/run/docker-host.sock,type=bind",
		"source=${localEnv:HOME}${localEnv:USERPROFILE}/.aws/credentials,target=/root/.aws/credentials,type=bind",
		"source=${localEnv:HOME}${localEnv:USERPROFILE}/.ssh,target=/root/.ssh,type=bind"
	 ],
	"overrideCommand": false,
	
	// Use this environment variable if you need to bind mount your local source code into a new container.
	"remoteEnv": {
		"LOCAL_WORKSPACE_FOLDER": "${localWorkspaceFolder}",
		"PATH": "${containerEnv:PATH}:${containerWorkspaceFolder}/bin"
	},

	// Set *default* container specific settings.json values on container create.
	"settings": { 
		"terminal.integrated.shell.linux": "/bin/bash"
	},

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"ms-azuretools.vscode-docker"
	],
	
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "docker --version",
	"postAttachCommand": "echo \"postAttach\" && pwd && chmod -R 777 bin",
	"remoteUser": "pi"

	// Comment out connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
}